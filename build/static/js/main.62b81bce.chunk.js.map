{"version":3,"sources":["Components/imageGalleryItem/ImageGalleryItemStyled.js","Components/imageGalleryItem/ImageGalleryItem.js","services/gallery-api.js","Components/button/ButtonStyled.js","Components/button/Button.js","Components/modal/ModalStyled.js","Components/modal/Modal.js","Components/imageGallery/ImageGalleryStyled.js","Components/imageGallery/ImageGallery.js","Components/searchbar/SearchbarStyled.js","Components/searchbar/Searchbar.js","Components/App.js","index.js"],"names":["ImageItemContainer","styled","li","ImageGalleryItem","imgUrl","imgAlt","imgId","onClick","src","alt","id","className","api","fetchGallery","imageTag","page","fetch","then","res","ok","json","Promise","reject","Error","data","hits","length","ButtonContainer","div","Button","type","ModalContainer","Modal","toggleModal","image","e","target","currentTarget","document","querySelector","style","opacity","largeImageURL","tags","galleryStyle","GalleryContainer","DivContainer","initialState","images","error","status","isModalOpen","targetImg","ImageGallery","useState","state","setState","useEffect","galleryAPI","img","prev","catch","window","scrollTo","top","documentElement","scrollHeight","behavior","findTargetImg","targetElement","find","item","color","height","width","timeout","message","map","webformatURL","nextImg","SearchbarContainer","header","Searchbar","onSubmit","searchbar","setSearchbar","preventDefault","trim","toast","autoComplete","autoFocus","placeholder","name","value","onChange","toLowerCase","App","app","setApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.62b81bce.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ImageItemContainer = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n    img {\n        width: 100%;\n        height: 260px;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:hover {\n            transform: scale(1.03);\n            cursor: zoom-in;\n            }\n    }\n`;","import React from 'react';\nimport {ImageItemContainer} from './ImageGalleryItemStyled';\n\nconst ImageGalleryItem = ({imgUrl, imgAlt, imgId, onClick}) => {\n    return (\n        <ImageItemContainer>\n            <img src={imgUrl} alt={imgAlt} key={imgId} id={imgId} onClick={onClick} className=\"ImageGalleryItem-image\" />\n        </ImageItemContainer>\n    );\n}\n\nexport default ImageGalleryItem;","const API_KEY = '23294287-f28ad0716a186f6195177ba0b';\n\nfunction fetchGallery (imageTag, page) {\n    return fetch(`https://pixabay.com/api/?q=${imageTag}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n        .then(res => {\n            if(res.ok) {\n                return res.json();\n            }\n                \n            return Promise.reject(\n                new Error(`Cannot find ${imageTag} image`),\n            );\n        })\n        .then((data) => {\n            if(data.hits.length) {\n                return data;\n            };\n            throw new Error(`Cannot find ${imageTag} image`);\n        })\n};\n\nconst api = {\n    fetchGallery,\n};\n\nexport default api;","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n    button {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        margin-top: 30px;\n        margin-bottom: 30px;\n        margin-left: auto;\n        margin-right: auto;\n        padding: 6px 14px;\n        height: 40px;\n        width: 120px;\n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;\n        border-radius: 6px;\n        color: #fff;\n        background: #012ce7;\n        border: none;\n        box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1);\n\n        &:focus {\n            box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1), 0px 0px 0px 3.5px rgba(58, 108, 217, 0.5);\n            outline: 0;\n        }\n    }\n`;","import React from 'react';\nimport {ButtonContainer} from './ButtonStyled';\n\nconst Button = ({onClick}) => {\n    return (\n        <ButtonContainer>\n            <button type='submit' onClick={onClick}>Load more</button>\n        </ButtonContainer>\n    );\n};\n\nexport default Button;","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  .Overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #000000b2;\n    z-index: 1200;\n    overflow: auto;\n    opacity: 1;\n  }\n\n  .Modal {\n    position: relative;\n    background-color: #3d3d3d;\n    overflow: hidden;\n  }\n\n  img{\n      width: 900px;\n  }\n`;","import React from 'react';\nimport { ModalContainer } from './ModalStyled';\n\nconst Modal = ({toggleModal, image}) => {\n    const closeModal = (e) => {\n        if(e.target === e.currentTarget) {\n            const overlay = document.querySelector('.Overlay');\n            overlay.style.opacity = '0';\n            toggleModal();\n        };\n    };\n\n    return (\n        <ModalContainer>\n            <div className=\"Overlay\" onClick={closeModal}>\n                <div className=\"Modal\">\n                    <img src={image.largeImageURL} alt={image.tags} key={image.id}/>\n                </div>\n            </div>\n        </ModalContainer>\n    );\n};\n\nexport default Modal;\n\n","import styled from 'styled-components';\n\nconst GalleryContainer = styled.div`\n    .ImageGallery {\n        display: grid;\n        max-width: calc(100vw - 48px);\n        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n        grid-gap: 16px;\n        margin-top: 0;\n        margin-bottom: 0;\n        padding: 0;\n        list-style: none;\n        margin-left: auto;\n        margin-right: auto;\n    }\n`;\n\nconst DivContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    font-size: 22px;\n    font-weight: 400;\n`;\n\nconst galleryStyle = {\n    GalleryContainer,\n    DivContainer\n}\n\nexport default galleryStyle;","import React, {useState, useEffect} from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem';\nimport galleryAPI from '../../services/gallery-api';\nimport Button from '../button/Button';\nimport Modal from '../modal/Modal';\nimport galleryStyle from './ImageGalleryStyled';\n\nconst initialState = { \n    images: [],\n    error: null,\n    status: 'idle',\n    page: 1,\n    isModalOpen: false,\n    targetImg: {}\n};\n\nconst ImageGallery = ({image}) => {\n    const [state, setState] = useState(initialState);\n    const {images, error, status, page, isModalOpen, targetImg} = state;\n\n    useEffect(() => {\n        if (image) {\n            setState({ status: 'pending', page: 1});\n\n            galleryAPI\n            .fetchGallery(image, page)\n            .then(img => setState((prev)=> \n                ({images: [...img.hits], status: 'resolved', page: prev.page+1})\n            ))\n            .catch(error => setState({error, status: 'rejected'}));\n        };\n    }, [image]);\n\n    useEffect(() => {\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n        });\n    }, [images]);\n\n    const loadMore = () => {\n        const nextImg = image;\n        galleryAPI\n            .fetchGallery(nextImg, page)\n            .then(img => setState((prev)=> \n                ({...prev, images: [...prev.images, ...img.hits], status: 'resolved', page: prev.page+1})\n            ));\n    };\n\n    const findTargetImg = (e) => {\n        const id = e.currentTarget.id;\n        const targetElement = images.find((item) => item.id == id);\n\n        setState((prev) => ({\n          ...prev,\n          isModalOpen: !prev.isModalOpen,\n          targetImg: {...targetElement}\n        }));\n    };\n\n    const toggleModal = () => {\n        setState((prev) => ({\n            ...prev,\n          isModalOpen: !prev.isModalOpen\n        }));\n    };\n\n    if(status === 'idle') {\n        return <galleryStyle.DivContainer>Enter an image tag, please.</galleryStyle.DivContainer>;\n    };\n\n    if(status === 'pending') {\n        return <Loader\n            type=\"ThreeDots\"\n            color=\"#777879\"\n            height={100}\n            width={100}\n            timeout={3000} \n        />;\n    };\n\n    if(status === 'rejected') {\n        return <h3>{error.message}</h3>;\n    };\n\n    if(status === 'resolved') {\n        return (\n            <galleryStyle.GalleryContainer>\n                <ul className=\"ImageGallery\">\n                    {images.map((item) => \n                        <ImageGalleryItem imgUrl={item.webformatURL} imgAlt={item.tags} \n                        imgId={item.id} onClick={findTargetImg}/>\n                    )}\n                </ul>\n                {images.length > 0 && <Button onClick={loadMore}></Button>}\n                {isModalOpen && <Modal image={targetImg} toggleModal={toggleModal}/>}\n            </galleryStyle.GalleryContainer>\n        );\n    };\n};\n\nexport default ImageGallery;\n\n// class ImageGallery extends Component {\n//     state = { \n//         images: [],\n//         error: null,\n//         status: 'idle',\n//         page: 1,\n//         isModalOpen: false,\n//         targetImg: {}\n//     };\n\n//     componentDidUpdate(prevProps, prevState) {\n//         const prevImg = prevProps.image;\n//         const nextImg = this.props.image;\n\n//         if (prevImg !== nextImg) {\n//             this.loadImages(nextImg);\n//         };\n\n//         if(prevProps.images !== prevState.images) {\n//             window.scrollTo({\n//                 top: document.documentElement.scrollHeight,\n//                 behavior: \"smooth\",\n//             });\n//         };\n//     };\n\n//     loadImages = (nextImg) => {\n//         this.setState({ status: 'pending', page: 1})\n            \n//         galleryAPI\n//             .fetchGallery(nextImg, this.state.page)\n//             .then(img => this.setState((prev)=> \n//                 ({images: [...img.hits], status: 'resolved', page: prev.page+1})\n//             ))\n//             .catch(error => this.setState({error, status: 'rejected'}));\n//     };\n\n//     loadMore = () => {\n//         const nextImg = this.props.image;\n//         galleryAPI\n//             .fetchGallery(nextImg, this.state.page)\n//             .then(img => this.setState((prev)=> \n//                 ({images: [...prev.images, ...img.hits], status: 'resolved', page: prev.page+1})\n//             ));\n//     };\n\n//     findTargetImg = (e) => {\n//         const id = e.currentTarget.id;\n//         const targetElement = this.state.images.find((item) => item.id == id);\n\n//         this.setState((prev) => ({\n//           isModalOpen: !prev.isModalOpen,\n//           targetImg: {...targetElement}\n//         }));\n//     };\n\n//     toggleModal = () => {\n//         this.setState((prev) => ({\n//           isModalOpen: !prev.isModalOpen\n//         }));\n//     };\n\n//     render() {\n//         const {images, error, status, isModalOpen, targetImg} = this.state;\n\n//         if(status === 'idle') {\n//             return <galleryStyle.DivContainer>Enter an image tag, please.</galleryStyle.DivContainer>;\n//         };\n\n//         if(status === 'pending') {\n//             return <Loader\n//                 type=\"ThreeDots\"\n//                 color=\"#777879\"\n//                 height={100}\n//                 width={100}\n//                 timeout={3000} \n//             />;\n//         };\n\n//         if(status === 'rejected') {\n//             return <h3>{error.message}</h3>;\n//         };\n\n//         if(status === 'resolved') {\n//             return (\n//                 <galleryStyle.GalleryContainer>\n//                     <ul className=\"ImageGallery\">\n//                         {images.map((item) => \n//                             <ImageGalleryItem imgUrl={item.webformatURL} imgAlt={item.tags} \n//                             imgId={item.id} onClick={this.findTargetImg}/>\n//                         )}\n//                     </ul>\n//                     {images.length > 0 && <Button onClick={this.loadMore}></Button>}\n//                     {isModalOpen && <Modal image={targetImg} toggleModal={this.toggleModal}/>}\n//                 </galleryStyle.GalleryContainer>\n//             );\n//         };\n//     };\n// };\n\n// export default ImageGallery;\n\n","import styled from 'styled-components';\n\nexport const SearchbarContainer = styled.header`\n    .SearchForm {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-left: auto;\n        margin-right: auto;\n        margin-bottom: 15px;\n        width: 100%;\n        height: 60px;\n        background-color: #6598db;\n        border-radius: 3px;\n        overflow: hidden;\n    }\n\n    .SearchForm-button {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-left: 10px;\n        padding: 6px 14px;\n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;\n        border-radius: 6px;\n        color: #3D3D3D;\n        background: #fff;\n        border: none;\n        box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1);\n\n        &:focus {\n            box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1), 0px 0px 0px 3.5px rgba(58, 108, 217, 0.5);\n            outline: 0;\n        }\n    }\n\n    .SearchForm-input {\n        display: inline-block;\n        width: 280px;\n        font: inherit;\n        font-size: 20px;\n        border: none;\n        border-radius: 6px;\n        outline: none;\n        padding-left: 4px;\n        padding-right: 4px;\n    }\n\n    .SearchForm-input::placeholder {\n        font: inherit;\n        font-size: 18px;\n    }\n`; ","import React, {useState} from 'react';\nimport { toast } from 'react-toastify';\nimport {SearchbarContainer} from './SearchbarStyled';\n\nconst initialState = { \n    imageTag: ''\n};\n\nconst Searchbar = ({onSubmit}) => {\n    const [searchbar, setSearchbar] = useState(initialState);\n\n    const handleNameChange = (e) => {\n        setSearchbar({imageTag: e.currentTarget.value.toLowerCase() });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(searchbar.imageTag.trim() === '') {\n            toast.error('Enter an image tag, please.');\n            return;\n        };\n        onSubmit(searchbar.imageTag);\n        setSearchbar({imageTag: ''});\n    };\n\n    return (\n        <SearchbarContainer>\n            <form className=\"SearchForm\" onSubmit={handleSubmit}>\n                <input\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                    name = \"imageTag\"\n                    value={searchbar.imageTag}\n                    onChange={handleNameChange}\n                />\n                <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n            </form>\n        </SearchbarContainer>\n    );\n}\n\nexport default Searchbar;\n\n","import React, {useState} from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from './imageGallery/ImageGallery';\nimport Searchbar from './searchbar/Searchbar';\n\nconst initialState = {\n    image: '',\n};\n\nconst App = () => {\n    const [app, setApp] = useState(initialState);\n\n    const handleFormSubmit = (imageTag) => {\n        setApp((prev)=>({...prev, image: imageTag}))\n    };\n\n    return (\n        <main>\n            <ToastContainer/>\n            <Searchbar onSubmit={handleFormSubmit}/>\n            <ImageGallery image={app.image}/>\n        </main>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}